version: 2

jobs:
  build:
    docker:
      - image: gcc:latest
    steps:
      - checkout
      - run:
          name: Dependencies
          command: |
            apt-get update
            apt-get install cmake -y
            wget https://netcologne.dl.sourceforge.net/project/doxygen/rel-1.8.17/doxygen-1.8.17.linux.bin.tar.gz
            tar -xvzf doxygen-1.8.17.linux.bin.tar.gz
            cp doxygen-1.8.17/bin/doxygen /usr/local/bin/doxygen
            chmod +x /usr/local/bin/doxygen

      - run:
          name: Submodules
          command: |
            git submodule update --init

      - run:
          name: Compile
          command: |
            mkdir build
            mkdir /tmp/workspace
            cd build
            cmake -G "Unix Makefiles" \
              -DDOXYDOWN_TESTS=ON \
              -DBUILD_TESTS=OFF \
              -DBUILD_TESTING=OFF \
              -DBUILD_SHARED_LIBS=OFF \
              -DCMAKE_BUILD_TYPE=MinSizeRel \
              -DCMAKE_INSTALL_PREFIX=/tmp/workspace/doxybook2 \
              ..
            cmake --build . --target install

      - run:
          name: Generate Doxygen files
          command: |
            cd example
            doxygen
            cd ..
            cp -r example/doxygen/ /tmp/workspace/

      - run:
          name: Tests
          command: |
            cd build
            ctest --verbose

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - doxybook2
            - doxygen

  example_mkdocs:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Dependencies
          command: |
            sudo apt-get update
            sudo pip install mkdocs mkdocs-material mkdocs-bootstrap
            sudo cp /tmp/workspace/doxybook2/bin/doxybook2 /usr/local/bin/doxybook2
            sudo chmod +x /usr/local/bin/doxybook2

      - run:
          name: MkDocs - ReadTheDocs
          command: |
            cd ./example/mkdocs-readthedocs
            doxybook2 \
              --input /tmp/workspace/doxygen/xml \
              --output ./docs \
              --config ./.doxybook/config.json
            mkdocs build
            cp -r ./site /tmp/workspace/mkdocs-readthedocs

      - run:
          name: MkDocs - Material
          command: |
            cd ./example/mkdocs-material
            doxybook2 \
              --input /tmp/workspace/doxygen/xml \
              --output ./docs \
              --config ./.doxybook/config.json
            mkdocs build
            cp -r ./site /tmp/workspace/mkdocs-material

      - run:
          name: MkDocs - Bootstrap
          command: |
            cd ./example/mkdocs-bootstrap
            doxybook2 \
              --input /tmp/workspace/doxygen/xml \
              --output ./docs \
              --config ./.doxybook/config.json
            mkdocs build
            cp -r ./site /tmp/workspace/mkdocs-bootstrap
            
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - mkdocs-bootstrap
            - mkdocs-material
            - mkdocs-readthedocs

  example_hugo:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Dependencies
          command: |
            wget https://github.com/gohugoio/hugo/releases/download/v0.59.1/hugo_extended_0.59.1_Linux-64bit.deb
            sudo dpkg -i hugo_extended_0.59.1_Linux-64bit.deb
            sudo cp /tmp/workspace/doxybook2/bin/doxybook2 /usr/local/bin/doxybook2
            sudo chmod +x /usr/local/bin/doxybook2

      - run:
          name: Submodules
          command: |
            git submodule update --init

      - run:
          name: Hugo - Learn
          command: |
            cd ./example/hugo-learn
            doxybook2 \
              --input /tmp/workspace/doxygen/xml \
              --output ./content \
              --config ./.doxybook/config.json \
              --templates ./.doxybook/templates
            hugo
            cp -r ./public /tmp/workspace/hugo-learn

      - run:
          name: Hugo - Book
          command: |
            cd ./example/hugo-book
            doxybook2 \
              --input /tmp/workspace/doxygen/xml \
              --output ./content \
              --config ./.doxybook/config.json \
              --templates ./.doxybook/templates
            hugo
            cp -r ./public /tmp/workspace/hugo-book

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - hugo-learn
            - hugo-book

  example_vuepress:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Dependencies
          command: |
            sudo npm install vuepress -g
            sudo cp /tmp/workspace/doxybook2/bin/doxybook2 /usr/local/bin/doxybook2
            sudo chmod +x /usr/local/bin/doxybook2

      - run:
          name: Vuepress
          command: |
            cd ./example/vuepress
            doxybook2 \
              --input /tmp/workspace/doxygen/xml \
              --output . \
              --config ./.doxybook/config.json
            sudo vuepress build
            cp -r ./.vuepress/dist /tmp/workspace/vuepress

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - vuepress

  example_gitbook:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Dependencies
          command: |
            sudo npm install gitbook-cli -g
            sudo cp /tmp/workspace/doxybook2/bin/doxybook2 /usr/local/bin/doxybook2
            sudo chmod +x /usr/local/bin/doxybook2

      - run:
          name: GitBook
          command: |
            cd ./example/gitbook
            doxybook2 \
              --input /tmp/workspace/doxygen/xml \
              --output . \
              --config ./.doxybook/config.json \
              --summary-input SUMMARY.md.tmpl \
              --summary-output SUMMARY.md
            gitbook build
            cp -r ./_book /tmp/workspace/gitbook

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - gitbook
  
  deploy:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace

      - add_ssh_keys:
          fingerprints:
            - "bb:06:cb:7a:1c:85:10:4f:85:a7:84:a2:60:2b:62:51"

      - run:
          name: Dependencies
          command: |
            npm install gh-pages@2.0.1

      - run:
          name: Deploy
          command: |
            git config --global user.email "$GITHUB_USER_EMAIL"
            git config --global user.name "$GITHUB_USER_NAME"
            mkdir dist
            cp -r /tmp/workspace/doxygen/html ./dist/original
            cp -r /tmp/workspace/hugo-learn ./dist/hugo-learn
            cp -r /tmp/workspace/hugo-book ./dist/hugo-book
            cp -r /tmp/workspace/mkdocs-bootstrap ./dist/mkdocs-bootstrap
            cp -r /tmp/workspace/mkdocs-material ./dist/mkdocs-material
            cp -r /tmp/workspace/mkdocs-readthedocs ./dist/mkdocs-readthedocs
            cp -r /tmp/workspace/vuepress ./dist/vuepress
            cp -r /tmp/workspace/gitbook ./dist/gitbook
            cp example/index.html ./dist/index.html
            DIST=dist node publish.js

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - example_mkdocs:
          requires:
            - build
      - example_hugo:
          requires:
            - build
      - example_vuepress:
          requires:
            - build
      - example_gitbook:
          requires:
            - build
      - deploy:
          requires:
            - example_mkdocs
            - example_hugo
            - example_vuepress
            - example_gitbook
          filters:
            branches:
              only:
                - master
