version: 2

jobs:
  build:
    docker:
      - image: gcc:latest
    steps:
      - checkout
      - run:
          name: Dependencies
          command: |
            apt-get update
            apt-get install cmake -y
            wget http://doxygen.nl/files/doxygen-1.8.16.linux.bin.tar.gz
            tar -xvzf doxygen-1.8.16.linux.bin.tar.gz
            cp doxygen-1.8.16/bin/doxygen /usr/local/bin/doxygen
            chmod +x /usr/local/bin/doxygen

      - run:
          name: Submodules
          command: |
            git submodule update --init

      - run:
          name: Compile
          command: |
            mkdir build
            mkdir /tmp/workspace
            cd build
            cmake -G "Unix Makefiles" \
              -DDOXYDOWN_TESTS=ON \
              -DBUILD_TESTS=OFF \
              -DBUILD_TESTING=OFF \
              -DBUILD_SHARED_LIBS=OFF \
              -DCMAKE_BUILD_TYPE=MinSizeRel \
              -DCMAKE_INSTALL_PREFIX=/tmp/workspace/doxydown \
              ..
            cmake --build . --target install

      - run:
          name: Generate Doxygen files
          command: |
            cd example
            doxygen
            cd ..
            cp -r example/doxygen/ /tmp/workspace/

      - run:
          name: Tests
          command: |
            cd build
            ctest --verbose

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - doxydown
            - doxygen

  examples:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install moreutils hugo -y
            sudo pip install mkdocs
            sudo cp /tmp/workspace/doxydown/bin/doxydown /usr/local/bin/doxydown
            sudo chmod +x /usr/local/bin/doxydown

      - run:
          name: Original
          command: |
            mkdir -p /tmp/workspace/gh-pages
            cp -r /tmp/workspace/doxygen/html /tmp/workspace/gh-pages/original

      - run:
          name: MkDocs - Read the docs
          command: |
            cd ./example/mkdocs-readthedocs
            jq '.baseUrl = "/doxydown/mkdocs-readthedocs/api/"' ./.doxydown/config.json | sponge ./.doxydown/config.json
            doxydown \
              --input /tmp/workspace/doxygen/xml \
              --output ./docs/api \
              --config ./.doxydown/config.json
            mkdocs build
            cp -r ./site /tmp/workspace/gh-pages/mkdocs-readthedocs

      - run:
          name: Hugo - Learn
          command: |
            cd ./example/hugo-learn
            doxydown \
              --input /tmp/workspace/doxygen/xml \
              --output ./content/api \
              --config ./.doxydown/config.json \
              --templates ./.doxydown/templates
            hugo
            cp -r ./public /tmp/workspace/gh-pages/hugo-learn

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - doxydown
            - doxygen
            - gh-pages
  
  deploy:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace

      - add_ssh_keys:
          fingerprints:
            - "bb:06:cb:7a:1c:85:10:4f:85:a7:84:a2:60:2b:62:51"

      - run:
          name: Dependencies
          command: |
            npm install gh-pages@2.0.1

      - run:
          name: Deploy
          command: |
            git config --global user.email "$GITHUB_USER_EMAIL"
            git config --global user.name "$GITHUB_USER_NAME"
            mv /tmp/workspace/gh-pages ./dist
            cp example/index.html ./dist/index.html
            DIST=dist node publish.js

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - examples:
          requires:
            - build
      - deploy:
          requires:
            - examples
          filters:
            branches:
              only:
                - master
