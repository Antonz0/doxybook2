'use strict';(function(){const indexCfg=;indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/doxydown/hugo-book/pages/advanced/','title':"Advanced Usage",'content':" Advanced Usage This page is for advanced users. Make sure you have first read the introduction.\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':1,'href':'/doxydown/hugo-book/modules/group__engine/','title':"An example game engine",'content':" An example game engine This is a brief description to the engine group. More\u0026hellip;\nModules    Name     Some useful utilities This is a brief description to the utils group.   Graphical related classes This is a brief description to the graphics group.   Audio buffers and devices This is a brief description to the audio group.   Generic assets This is a brief description to the assets group.    Namespaces    Name     Engine This namespace contains all of the necessary engine components.    Classes     Name     class Engine::Exception    Detailed Description This is a brief description to the engine group.\nSome detailed description here\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':2,'href':'/doxydown/hugo-book/modules/group__audio/','title':"Audio buffers and devices",'content':" Audio buffers and devices Module: An example game engine\nThis is a brief description to the audio group. More\u0026hellip;\nClasses     Name     class Engine::Audio::AudioManager An audio manager that accepts multiple Audio::AudioBuffer instances.   class Engine::Audio::AudioBuffer A simple audio buffer to hold PCM samples    Detailed Description This is a brief description to the audio group.\nSome detailed description here\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':3,'href':'/doxydown/hugo-book/pages/bug/','title':"Bug List",'content':" Bug List Class Engine::Audio::AudioBuffer\n Some random bug Some other random bug\n  Class Engine::Graphics::Texture\n This has some weird bug too!  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':4,'href':'/doxydown/hugo-book/categories/','title':"Categories",'content':""});index.add({'id':5,'href':'/doxydown/hugo-book/classes/','title':"Classes",'content':" Classes  namespace Engine\nThis namespace contains all of the necessary engine components.  namespace Assets  class Asset  union Event  struct Loaded struct Unloaded struct Waiting    namespace Audio  class AudioBuffer\nA simple audio buffer to hold PCM samples  struct TypedAudioData\nUse this to populate the buffer.  class AudioManager\nAn audio manager that accepts multiple Audio::AudioBuffer instances.  class Exception namespace Graphics  class Framebuffer class Handle class Texture2D class Texture3D  namespace Utils  class ArrayView\nFilesystem path utility functions. namespace Path\nFilesystem path utility functions.    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':6,'href':'/doxydown/hugo-book/','title':"Doxydown Example",'content':" Doxydown Example This is a mainpage of Doxydown example output. This file is generated from \\mainpage command within [Engine.hpp](/doxydown/hugo-book/files/engine_8hpp/#file-engine.hpp) file.\nImages: Refs:  Some texture class ref Some audio buffer class ref  Simple list:  list item 1  sub item 1  sub sub item 1 with italic sub sub item 2 with bold  sub item 2  list item 2  sub item 3  sub sub item 3 with strike through sub sub item 4 with monospaced    Enumerated list:  list item 1  sub item 1  sub sub item 1 with italic sub sub item 2 with bold  sub item 2  list item 2  sub item 3  sub sub item 3 with strike through    Hyper links:  GitHub repository  Code blocks: #include \u0026lt;iostream\u0026gt; int main(int argc, char** argv) { std::cout \u0026lt;\u0026lt; \u0026#34;Hello World\u0026#34; \u0026lt;\u0026lt; std::endl; return 0; }  Subpages: This manual is divided in the following sections:\n Introduction Advanced usage  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':7,'href':'/doxydown/hugo-book/namespaces/namespaceengine/','title':"Engine",'content':" Engine Module: An example game engine\nThis namespace contains all of the necessary engine components. More\u0026hellip;\nNamespaces    Name     Engine::Utils   Engine::Graphics   Engine::Audio   Engine::Assets    Classes     Name     class Engine::Exception    Functions     Name     std::string getVersion()    Detailed Description This namespace contains all of the necessary engine components.\nSee:\n Engine::Assets Engine::Audio Engine::Graphics Engine::Utils  Functions Documentation function getVersion std::string getVersion()  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':8,'href':'/doxydown/hugo-book/namespaces/namespaceengine_1_1assets/','title':"Engine::Assets",'content':" Engine::Assets Classes     Name     class Engine::Assets::Asset    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':9,'href':'/doxydown/hugo-book/classes/classengine_1_1assets_1_1asset/','title':"Engine::Assets::Asset",'content':" Engine::Assets::Asset Module: An example game engine / Generic assets\n#include \u0026lt;Asset.hpp\u0026gt;\nInherits from\nPublic Classes     Name     union Event    Public Functions     Name     const Event \u0026amp; getEvent() const Returns the current status of the asset.   virtual void unload() Call this method to unload the asset.   virtual void load() Call this method to load the asset.   virtual ~Asset() =0    Asset(const std::string \u0026amp; name)    Public Functions Documentation function getEvent inline const Event \u0026amp; getEvent() const  Returns the current status of the asset.\nUse this to determine the state, for example if the assets is being loaded or unloaded.\nfunction unload virtual void unload()  Call this method to unload the asset.\nfunction load virtual void load()  Call this method to load the asset.\nfunction ~Asset virtual ~Asset() =0  function Asset explicit Asset( const std::string \u0026amp; name )  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':10,'href':'/doxydown/hugo-book/classes/unionengine_1_1assets_1_1asset_1_1event/','title':"Engine::Assets::Asset::Event",'content':" Engine::Assets::Asset::Event Module: An example game engine / Generic assets\n#include \u0026lt;Asset.hpp\u0026gt;\nInherits from\nPublic Classes     Name     struct Waiting   struct Unloaded   struct Loaded    Public Attributes     Name     struct Engine::Assets::Asset::Event::Waiting waiting   struct Engine::Assets::Asset::Event::Unloaded unloaded   struct Engine::Assets::Asset::Event::Loaded loaded    Public Attributes Documentation variable waiting struct Engine::Assets::Asset::Event::Waiting waiting;  variable unloaded struct Engine::Assets::Asset::Event::Unloaded unloaded;  variable loaded struct Engine::Assets::Asset::Event::Loaded loaded;  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':11,'href':'/doxydown/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1loaded/','title':"Engine::Assets::Asset::Event::Loaded",'content':" Engine::Assets::Asset::Event::Loaded #include \u0026lt;Asset.hpp\u0026gt;\nInherits from\nPublic Attributes     Name     int usage   bool success    Public Attributes Documentation variable usage int usage;  variable success bool success;  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':12,'href':'/doxydown/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1unloaded/','title':"Engine::Assets::Asset::Event::Unloaded",'content':" Engine::Assets::Asset::Event::Unloaded #include \u0026lt;Asset.hpp\u0026gt;\nInherits from\nPublic Attributes     Name     bool success    Public Attributes Documentation variable success bool success;  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':13,'href':'/doxydown/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1waiting/','title':"Engine::Assets::Asset::Event::Waiting",'content':" Engine::Assets::Asset::Event::Waiting #include \u0026lt;Asset.hpp\u0026gt;\nInherits from\nPublic Attributes     Name     Asset * other The pointer to the other asset this asset is waiting for.    Public Attributes Documentation variable other Asset * other;  The pointer to the other asset this asset is waiting for.\nNote: May be null\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':14,'href':'/doxydown/hugo-book/namespaces/namespaceengine_1_1audio/','title':"Engine::Audio",'content':" Engine::Audio Classes     Name     class Engine::Audio::AudioManager An audio manager that accepts multiple Audio::AudioBuffer instances.   class Engine::Audio::AudioBuffer A simple audio buffer to hold PCM samples    Functions     Name     void doSomething(AudioBuffer \u0026amp; buffer) Do something with the buffer.    Functions Documentation function doSomething void doSomething( AudioBuffer \u0026amp; buffer )  Do something with the buffer.\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':15,'href':'/doxydown/hugo-book/classes/classengine_1_1audio_1_1audiobuffer/','title':"Engine::Audio::AudioBuffer",'content':" Engine::Audio::AudioBuffer Module: An example game engine / Audio buffers and devices\nA simple audio buffer to hold PCM samples More\u0026hellip;\n#include \u0026lt;AudioBuffer.hpp\u0026gt;\nInherits from\nPublic Classes     Name     struct TypedAudioData Use this to populate the buffer.    Public Types     Name     typedef Utils::ArrayView\u0026lt; uint8_t \u0026gt; AudioData   enum Type { UNKNOWN, INT8, INT16, INT24, INT32, FLOAT32 }\nDifferent type of audio formats.    Public Functions     Name     void setData(const TypedAudioData \u0026amp; data)   void loop(AudioManager \u0026amp; manager) const Loop this buffer forever.   void stop(AudioManager \u0026amp; manager) const Stop this buffer playing.   void play(AudioManager \u0026amp; manager) const Play this buffer.   virtual ~AudioBuffer() =default Audio::AudioBuffer destructor.    AudioBuffer(const std::string \u0026amp; filename) Constructor for Audio::AudioBuffer.    Protected Functions     Name     float * getData()    Protected Attributes     Name     bool playing    Friends     Name     void Audio::doSomething(AudioBuffer \u0026amp; buffer)   class AudioManager    Detailed Description class Engine::Audio::AudioBuffer;  A simple audio buffer to hold PCM samples\nAuthor: Matus Novak\nDate: 2017-2019\nNote:\n Some random note Some second random note  Bug: Some random bug Some other random bug\nTest: Some random test description\nTodo: Some random todo\nWarning: Some random warning\nPrecondition: First initialize the system.\nLorem ipsum donor\n// Some random code using namespace Engine; Audio::AudioBuffer buffer(\u0026#34;path/to/file.wav\u0026#34;); buffer.play(audioManager);  More detailed description!\n// Another code sample #include \u0026lt;iostream\u0026gt;using namespace Engine; Audio::AudioBuffer buffer(\u0026#34;path/to/file.wav\u0026#34;); std::cout \u0026lt;\u0026lt; buffer.play(...) \u0026lt;\u0026lt; std::endl;  Public Types Documentation typedef AudioData typedef Utils::ArrayView\u0026lt; uint8_t \u0026gt; AudioData;  enum Type enum Type { UNKNOWN, INT8, INT16, INT24, INT32, FLOAT32 }  Different type of audio formats.\nPublic Functions Documentation function setData void setData( const TypedAudioData \u0026amp; data )  function loop void loop( AudioManager \u0026amp; manager ) const  Loop this buffer forever.\nExceptions:\n Exception If this buffer is already looping  Note: This will loop forever until you call stop\nfunction stop void stop( AudioManager \u0026amp; manager ) const  Stop this buffer playing.\nExceptions:\n Exception If this buffer is already stopped  function play void play( AudioManager \u0026amp; manager ) const  Play this buffer.\nExceptions:\n Exception If this buffer is already playing  function ~AudioBuffer virtual ~AudioBuffer() =default  Audio::AudioBuffer destructor.\nfunction AudioBuffer explicit AudioBuffer( const std::string \u0026amp; filename )  Constructor for Audio::AudioBuffer.\nProtected Functions Documentation function getData float * getData()  Protected Attributes Documentation variable playing bool playing {false};  Friends friend Audio::doSomething friend void Audio::doSomething( AudioBuffer \u0026amp; buffer );  friend AudioManager friend class AudioManager;  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':16,'href':'/doxydown/hugo-book/classes/structengine_1_1audio_1_1audiobuffer_1_1typedaudiodata/','title':"Engine::Audio::AudioBuffer::TypedAudioData",'content':" Engine::Audio::AudioBuffer::TypedAudioData Use this to populate the buffer.\n#include \u0026lt;AudioBuffer.hpp\u0026gt;\nInherits from\nPublic Attributes     Name     Type type   AudioData buffer    Public Attributes Documentation variable type Type type;  variable buffer AudioData buffer;  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':17,'href':'/doxydown/hugo-book/classes/classengine_1_1audio_1_1audiomanager/','title':"Engine::Audio::AudioManager",'content':" Engine::Audio::AudioManager Module: An example game engine / Audio buffers and devices\nAn audio manager that accepts multiple Audio::AudioBuffer instances. More\u0026hellip;\n#include \u0026lt;AudioManager.hpp\u0026gt;\nInherits from\nPublic Functions     Name     void enque(const AudioBuffer \u0026amp; buffer)    ~AudioManager()    AudioManager(int numOfChannels =128)    Detailed Description class Engine::Audio::AudioManager;  An audio manager that accepts multiple Audio::AudioBuffer instances.\nSee: Audio::AudioBuffer\nLorem Ipsum Donor. Some Random link with bold and italics And the following is a typewritter font. And here is some list items:\n First item Second item Third item with bold text  Public Functions Documentation function enque void enque( const AudioBuffer \u0026amp; buffer )  function ~AudioManager ~AudioManager()  function AudioManager AudioManager( int numOfChannels =128 )  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':18,'href':'/doxydown/hugo-book/classes/classengine_1_1exception/','title':"Engine::Exception",'content':" Engine::Exception Module: An example game engine\n#include \u0026lt;Exception.hpp\u0026gt;\nInherits from exception\nPublic Functions     Name     const char * what() const override    Exception(std::string msg)    Exception() =default    Public Functions Documentation function what inline const char * what() const override  function Exception inline explicit Exception( std::string msg )  function Exception Exception() =default  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':19,'href':'/doxydown/hugo-book/namespaces/namespaceengine_1_1graphics/','title':"Engine::Graphics",'content':" Engine::Graphics Classes     Name     class Engine::Graphics::Texture3D   class Engine::Graphics::Texture2D   interface Engine::Graphics::Texture This is a base texture class that serves as a base class for other texture types.   class Engine::Graphics::Handle   class Engine::Graphics::Framebuffer    Functions     Name     int getHandle(Handle \u0026amp; handle) Some namespace inline function.    Functions Documentation function getHandle inline int getHandle( Handle \u0026amp; handle )  Some namespace inline function.\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':20,'href':'/doxydown/hugo-book/classes/classengine_1_1graphics_1_1framebuffer/','title':"Engine::Graphics::Framebuffer",'content':" Engine::Graphics::Framebuffer Module: An example game engine / Graphical related classes\n#include \u0026lt;Framebuffer.hpp\u0026gt;\nInherits from Engine::Graphics::Texture, Engine::Graphics::Handle\nPublic Functions     Name     virtual int getDepth() const override Returns the depth of the texture in pixels.   virtual int getHeight() const override Returns the height of the texture in pixels.   virtual int getWidth() const override Returns the width of the texture in pixels.   virtual ~Framebuffer()    Framebuffer(int width, int height)    Additional inherited members Public Types inherited from Engine::Graphics::Texture\n    Name     enum Type { UNKNOWN, RGBA8, RGB8, RGBA16, RGB16, RGBA32, RGB32 }    Public Functions inherited from Engine::Graphics::Texture\n    Name     bool isLoaded() const   virtual ~Texture() =default    Texture(Type type)    Protected Attributes inherited from Engine::Graphics::Texture\n    Name     Type type   bool loaded    Public Functions inherited from Engine::Graphics::Handle\n    Name     int getHandle() const   virtual ~Handle() =default    Handle() =default    Protected Attributes inherited from Engine::Graphics::Handle\n    Name     int handle    Public Functions Documentation function getDepth virtual int getDepth() const override  Returns the depth of the texture in pixels.\nReturn: Depth in pixels\nNote: If this texture is 2D the depth is always 1 pixels\nReimplements: Engine::Graphics::Texture::getDepth\nfunction getHeight virtual int getHeight() const override  Returns the height of the texture in pixels.\nReturn: Height in pixels\nReimplements: Engine::Graphics::Texture::getHeight\nfunction getWidth virtual int getWidth() const override  Returns the width of the texture in pixels.\nReturn: Width in pixels\nReimplements: Engine::Graphics::Texture::getWidth\nfunction ~Framebuffer virtual ~Framebuffer()  function Framebuffer Framebuffer( int width, int height )  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':21,'href':'/doxydown/hugo-book/classes/classengine_1_1graphics_1_1handle/','title':"Engine::Graphics::Handle",'content':" Engine::Graphics::Handle Module: An example game engine / Graphical related classes\n#include \u0026lt;Handle.hpp\u0026gt;\nInherits from\nInherited by Engine::Graphics::Texture\nPublic Functions     Name     int getHandle() const   virtual ~Handle() =default    Handle() =default    Protected Attributes     Name     int handle    Public Functions Documentation function getHandle inline int getHandle() const  function ~Handle virtual ~Handle() =default  function Handle Handle() =default  Protected Attributes Documentation variable handle int handle;  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':22,'href':'/doxydown/hugo-book/classes/classengine_1_1graphics_1_1texture/','title':"Engine::Graphics::Texture",'content':" Engine::Graphics::Texture Module: An example game engine / Graphical related classes\nThis is a base texture class that serves as a base class for other texture types. More\u0026hellip;\n#include \u0026lt;Texture.hpp\u0026gt;\nInherits from Engine::Graphics::Handle\nInherited by Engine::Graphics::Framebuffer, Engine::Graphics::Texture2D, Engine::Graphics::Texture3D\nPublic Types     Name     enum Type { UNKNOWN, RGBA8, RGB8, RGBA16, RGB16, RGBA32, RGB32 }    Public Functions     Name     bool isLoaded() const   virtual int getDepth() const =0 Returns the depth of the texture in pixels.   virtual int getHeight() const =0 Returns the height of the texture in pixels.   virtual int getWidth() const =0 Returns the width of the texture in pixels.   virtual ~Texture() =default    Texture(Type type)    Protected Attributes     Name     Type type   bool loaded    Additional inherited members Public Functions inherited from Engine::Graphics::Handle\n    Name     int getHandle() const   virtual ~Handle() =default    Handle() =default    Protected Attributes inherited from Engine::Graphics::Handle\n    Name     int handle    Detailed Description interface Engine::Graphics::Texture;  This is a base texture class that serves as a base class for other texture types.\nBug: This has some weird bug too!\nPublic Types Documentation enum Type enum Type { UNKNOWN, RGBA8, RGB8, RGBA16, RGB16, RGBA32, RGB32 }  Public Functions Documentation function isLoaded inline bool isLoaded() const  Does some more things\nfunction getDepth virtual int getDepth() const =0  Returns the depth of the texture in pixels.\nReturn: Depth in pixels\nNote: If this texture is 2D the depth is always 1 pixels\nReimplemented by: Engine::Graphics::Framebuffer::getDepth, Engine::Graphics::Texture3D::getDepth, Engine::Graphics::Texture2D::getDepth\nfunction getHeight virtual int getHeight() const =0  Returns the height of the texture in pixels.\nReturn: Height in pixels\nReimplemented by: Engine::Graphics::Framebuffer::getHeight, Engine::Graphics::Texture3D::getHeight, Engine::Graphics::Texture2D::getHeight\nfunction getWidth virtual int getWidth() const =0  Returns the width of the texture in pixels.\nReturn: Width in pixels\nReimplemented by: Engine::Graphics::Framebuffer::getWidth, Engine::Graphics::Texture3D::getWidth, Engine::Graphics::Texture2D::getWidth\nfunction ~Texture virtual ~Texture() =default  function Texture explicit Texture( Type type )  Protected Attributes Documentation variable type Type type;  variable loaded bool loaded {false};  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':23,'href':'/doxydown/hugo-book/classes/classengine_1_1graphics_1_1texture2d/','title':"Engine::Graphics::Texture2D",'content':" Engine::Graphics::Texture2D Module: An example game engine / Graphical related classes\n#include \u0026lt;Texture2D.hpp\u0026gt;\nInherits from Engine::Graphics::Texture, Engine::Graphics::Handle\nPublic Functions     Name     virtual int getDepth() const override Returns the depth of the texture in pixels.   virtual int getHeight() const override Returns the height of the texture in pixels.   virtual int getWidth() const override Returns the width of the texture in pixels.   virtual ~Texture2D()    Texture2D(int width, int height, uint8_t * data, Texture::Type type =Texture::Type::RGBA8)    Additional inherited members Public Types inherited from Engine::Graphics::Texture\n    Name     enum Type { UNKNOWN, RGBA8, RGB8, RGBA16, RGB16, RGBA32, RGB32 }    Public Functions inherited from Engine::Graphics::Texture\n    Name     bool isLoaded() const   virtual ~Texture() =default    Texture(Type type)    Protected Attributes inherited from Engine::Graphics::Texture\n    Name     Type type   bool loaded    Public Functions inherited from Engine::Graphics::Handle\n    Name     int getHandle() const   virtual ~Handle() =default    Handle() =default    Protected Attributes inherited from Engine::Graphics::Handle\n    Name     int handle    Public Functions Documentation function getDepth virtual int getDepth() const override  Returns the depth of the texture in pixels.\nReturn: Depth in pixels\nNote: If this texture is 2D the depth is always 1 pixels\nReimplements: Engine::Graphics::Texture::getDepth\nfunction getHeight virtual int getHeight() const override  Returns the height of the texture in pixels.\nReturn: Height in pixels\nReimplements: Engine::Graphics::Texture::getHeight\nfunction getWidth virtual int getWidth() const override  Returns the width of the texture in pixels.\nReturn: Width in pixels\nReimplements: Engine::Graphics::Texture::getWidth\nfunction ~Texture2D virtual ~Texture2D()  function Texture2D Texture2D( int width, int height, uint8_t * data, Texture::Type type =Texture::Type::RGBA8 )  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':24,'href':'/doxydown/hugo-book/classes/classengine_1_1graphics_1_1texture3d/','title':"Engine::Graphics::Texture3D",'content':" Engine::Graphics::Texture3D Module: An example game engine / Graphical related classes\n#include \u0026lt;Texture3D.hpp\u0026gt;\nInherits from Engine::Graphics::Texture, Engine::Graphics::Handle\nPublic Functions     Name     virtual int getDepth() const override Returns the depth of the texture in pixels.   virtual int getHeight() const override Returns the height of the texture in pixels.   virtual int getWidth() const override Returns the width of the texture in pixels.   virtual ~Texture3D()    Texture3D(int width, int height, int depth, uint8_t * data, Texture::Type type =Texture::Type::RGBA8)    Additional inherited members Public Types inherited from Engine::Graphics::Texture\n    Name     enum Type { UNKNOWN, RGBA8, RGB8, RGBA16, RGB16, RGBA32, RGB32 }    Public Functions inherited from Engine::Graphics::Texture\n    Name     bool isLoaded() const   virtual ~Texture() =default    Texture(Type type)    Protected Attributes inherited from Engine::Graphics::Texture\n    Name     Type type   bool loaded    Public Functions inherited from Engine::Graphics::Handle\n    Name     int getHandle() const   virtual ~Handle() =default    Handle() =default    Protected Attributes inherited from Engine::Graphics::Handle\n    Name     int handle    Public Functions Documentation function getDepth virtual int getDepth() const override  Returns the depth of the texture in pixels.\nReturn: Depth in pixels\nNote: If this texture is 2D the depth is always 1 pixels\nReimplements: Engine::Graphics::Texture::getDepth\nfunction getHeight virtual int getHeight() const override  Returns the height of the texture in pixels.\nReturn: Height in pixels\nReimplements: Engine::Graphics::Texture::getHeight\nfunction getWidth virtual int getWidth() const override  Returns the width of the texture in pixels.\nReturn: Width in pixels\nReimplements: Engine::Graphics::Texture::getWidth\nfunction ~Texture3D virtual ~Texture3D()  function Texture3D Texture3D( int width, int height, int depth, uint8_t * data, Texture::Type type =Texture::Type::RGBA8 )  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':25,'href':'/doxydown/hugo-book/namespaces/namespaceengine_1_1utils/','title':"Engine::Utils",'content':" Engine::Utils Namespaces    Name     Engine::Utils::Path Filesystem path utility functions.    Classes     Name     class Engine::Utils::ArrayView Filesystem path utility functions.    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':26,'href':'/doxydown/hugo-book/classes/classengine_1_1utils_1_1arrayview/','title':"Engine::Utils::ArrayView",'content':" Engine::Utils::ArrayView Module: An example game engine / Some useful utilities\nFilesystem path utility functions. More\u0026hellip;\n#include \u0026lt;ArrayView.hpp\u0026gt;\nInherits from\nPublic Functions     Name     virtual size_t size() const   virtual const T * data() const   virtual ~ArrayView() =default    ArrayView(const T * src, size_t len)    Detailed Description template \u0026lt;typename T =uint8_t\u0026gt; class Engine::Utils::ArrayView;  Filesystem path utility functions.\nTemplate Parameters:\n T The type of the data, for example uint8_t  Public Functions Documentation function size virtual size_t size() const  function data virtual const T * data() const  function ~ArrayView virtual ~ArrayView() =default  function ArrayView ArrayView( const T * src, size_t len )  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':27,'href':'/doxydown/hugo-book/namespaces/namespaceengine_1_1utils_1_1path/','title':"Engine::Utils::Path",'content':" Engine::Utils::Path Module: An example game engine / Some useful utilities\nFilesystem path utility functions.\nFunctions     Name     std::string getExtension(const std::string \u0026amp; path)   std::string getFilename(const std::string \u0026amp; path)    Functions Documentation function getExtension std::string getExtension( const std::string \u0026amp; path )  function getFilename std::string getFilename( const std::string \u0026amp; path )  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':28,'href':'/doxydown/hugo-book/files/','title':"Files",'content':" Files  dir src  file src/Engine.hpp file src/Exception.hpp dir src/Assets  file src/Assets/Asset.hpp file src/Assets/Assets.hpp  dir src/Audio  file src/Audio/Audio.hpp file src/Audio/AudioBuffer.hpp file src/Audio/AudioManager.hpp  dir src/Graphics  file src/Graphics/Framebuffer.hpp file src/Graphics/Graphics.hpp file src/Graphics/Handle.hpp file src/Graphics/Renderer.hpp file src/Graphics/Texture.hpp file src/Graphics/Texture2D.hpp file src/Graphics/Texture3D.hpp  dir src/Utils  file src/Utils/ArrayView.hpp file src/Utils/Config.hpp file src/Utils/Log.hpp file src/Utils/Path.hpp file src/Utils/Utils.hpp    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':29,'href':'/doxydown/hugo-book/modules/group__assets/','title':"Generic assets",'content':" Generic assets Module: An example game engine\nThis is a brief description to the assets group. More\u0026hellip;\nClasses     Name     class Engine::Assets::Asset   union Engine::Assets::Asset::Event    Detailed Description This is a brief description to the assets group.\nSome detailed description here\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':30,'href':'/doxydown/hugo-book/modules/group__graphics/','title':"Graphical related classes",'content':" Graphical related classes Module: An example game engine\nThis is a brief description to the graphics group. More\u0026hellip;\nClasses     Name     interface Engine::Graphics::Texture This is a base texture class that serves as a base class for other texture types.   class Engine::Graphics::Texture3D   class Engine::Graphics::Texture2D   class Engine::Graphics::Handle   class Engine::Graphics::Framebuffer    Functions     Name     int getHandle(Handle \u0026amp; handle) Some namespace inline function.    Detailed Description This is a brief description to the graphics group.\nSome detailed description here\nFunctions Documentation function getHandle inline int getHandle( Handle \u0026amp; handle )  Some namespace inline function.\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':31,'href':'/doxydown/hugo-book/pages/intro/','title':"Introduction",'content':" Introduction This page introduces the user to the topic. Now you can proceed to the advanced section.\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':32,'href':'/doxydown/hugo-book/modules/','title':"Modules",'content':" Modules  module An example game engine\nThis is a brief description to the engine group.  module Generic assets\nThis is a brief description to the assets group. module Audio buffers and devices\nThis is a brief description to the audio group. module Graphical related classes\nThis is a brief description to the graphics group. module Some useful utilities\nThis is a brief description to the utils group.   Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':33,'href':'/doxydown/hugo-book/namespaces/','title':"Namespaces",'content':" Namespaces  namespace Engine\nThis namespace contains all of the necessary engine components.  namespace Assets namespace Audio namespace Graphics namespace Utils  namespace Path\nFilesystem path utility functions.    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':34,'href':'/doxydown/hugo-book/pages/','title':"Pages",'content':" Pages  page Advanced Usage page Bug List page Doxydown Example page Introduction page Test List page Todo List  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':35,'href':'/doxydown/hugo-book/modules/group__utils/','title':"Some useful utilities",'content':" Some useful utilities Module: An example game engine\nThis is a brief description to the utils group. More\u0026hellip;\nNamespaces    Name     Engine::Utils::Path Filesystem path utility functions.    Classes     Name     class Engine::Utils::ArrayView Filesystem path utility functions.    Defines     Name      LOG_DEBUG(MSG, \u0026hellip;)    ENGINE_VERSION Autogenerated version string by CMake.    Detailed Description This is a brief description to the utils group.\nSome detailed description here\nMacro Documentation define LOG_DEBUG #define LOG_DEBUG(  MSG, ... ) printf(MSG, ##__VA_ARGS__)  define ENGINE_VERSION #define ENGINE_VERSION \u0026#34;v1.0.1\u0026#34;  Autogenerated version string by CMake.\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':36,'href':'/doxydown/hugo-book/files/dir_68267d1309a1af8e8297ef4c3efbcdba/','title':"src",'content':" src Directories    Name     src/Utils   src/Graphics   src/Audio   src/Assets    Files    Name     src/Exception.hpp   src/Engine.hpp    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':37,'href':'/doxydown/hugo-book/files/dir_e0c1ede47f21c4a643a1257f949f98e0/','title':"src/Assets",'content':" src/Assets Files    Name     src/Assets/Assets.hpp   src/Assets/Asset.hpp    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':38,'href':'/doxydown/hugo-book/files/asset_8hpp/','title':"src/Assets/Asset.hpp",'content':" src/Assets/Asset.hpp Namespaces    Name     Engine::Assets   Engine This namespace contains all of the necessary engine components.    Classes     Name     struct Engine::Assets::Asset::Event::Waiting   struct Engine::Assets::Asset::Event::Unloaded   struct Engine::Assets::Asset::Event::Loaded   union Engine::Assets::Asset::Event   class Engine::Assets::Asset    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':39,'href':'/doxydown/hugo-book/files/assets_8hpp/','title':"src/Assets/Assets.hpp",'content':" src/Assets/Assets.hpp Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':40,'href':'/doxydown/hugo-book/files/dir_c64386e93f356b78d4612c7b7741707c/','title':"src/Audio",'content':" src/Audio Files    Name     src/Audio/AudioManager.hpp   src/Audio/AudioBuffer.hpp   src/Audio/Audio.hpp    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':41,'href':'/doxydown/hugo-book/files/audio_8hpp/','title':"src/Audio/Audio.hpp",'content':" src/Audio/Audio.hpp Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':42,'href':'/doxydown/hugo-book/files/audiobuffer_8hpp/','title':"src/Audio/AudioBuffer.hpp",'content':" src/Audio/AudioBuffer.hpp Namespaces    Name     Engine::Audio   Engine This namespace contains all of the necessary engine components.    Classes     Name     struct Engine::Audio::AudioBuffer::TypedAudioData Use this to populate the buffer.   class Engine::Audio::AudioBuffer A simple audio buffer to hold PCM samples    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':43,'href':'/doxydown/hugo-book/files/audiomanager_8hpp/','title':"src/Audio/AudioManager.hpp",'content':" src/Audio/AudioManager.hpp Namespaces    Name     Engine::Audio   Engine This namespace contains all of the necessary engine components.    Classes     Name     class Engine::Audio::AudioManager An audio manager that accepts multiple Audio::AudioBuffer instances.    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':44,'href':'/doxydown/hugo-book/files/engine_8hpp/','title':"src/Engine.hpp",'content':" src/Engine.hpp Namespaces    Name     Engine This namespace contains all of the necessary engine components.    Functions     Name     std::string someGlobalFunc() Some global extern function.    Functions Documentation function someGlobalFunc std::string someGlobalFunc()  Some global extern function.\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':45,'href':'/doxydown/hugo-book/files/exception_8hpp/','title':"src/Exception.hpp",'content':" src/Exception.hpp Namespaces    Name     Engine This namespace contains all of the necessary engine components.    Classes     Name     class Engine::Exception    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':46,'href':'/doxydown/hugo-book/files/dir_3419e189e460663ec2c964233bf8dcd6/','title':"src/Graphics",'content':" src/Graphics Files    Name     src/Graphics/Texture3D.hpp   src/Graphics/Texture2D.hpp   src/Graphics/Texture.hpp   src/Graphics/Renderer.hpp   src/Graphics/Handle.hpp   src/Graphics/Graphics.hpp   src/Graphics/Framebuffer.hpp    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':47,'href':'/doxydown/hugo-book/files/framebuffer_8hpp/','title':"src/Graphics/Framebuffer.hpp",'content':" src/Graphics/Framebuffer.hpp Namespaces    Name     Engine::Graphics   Engine This namespace contains all of the necessary engine components.    Classes     Name     class Engine::Graphics::Framebuffer    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':48,'href':'/doxydown/hugo-book/files/graphics_8hpp/','title':"src/Graphics/Graphics.hpp",'content':" src/Graphics/Graphics.hpp Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':49,'href':'/doxydown/hugo-book/files/handle_8hpp/','title':"src/Graphics/Handle.hpp",'content':" src/Graphics/Handle.hpp Namespaces    Name     Engine::Graphics   Engine This namespace contains all of the necessary engine components.    Classes     Name     class Engine::Graphics::Handle    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':50,'href':'/doxydown/hugo-book/files/renderer_8hpp/','title':"src/Graphics/Renderer.hpp",'content':" src/Graphics/Renderer.hpp Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':51,'href':'/doxydown/hugo-book/files/texture_8hpp/','title':"src/Graphics/Texture.hpp",'content':" src/Graphics/Texture.hpp Namespaces    Name     Engine::Graphics   Engine This namespace contains all of the necessary engine components.    Classes     Name     interface Engine::Graphics::Texture This is a base texture class that serves as a base class for other texture types.    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':52,'href':'/doxydown/hugo-book/files/texture2d_8hpp/','title':"src/Graphics/Texture2D.hpp",'content':" src/Graphics/Texture2D.hpp Namespaces    Name     Engine::Graphics   Engine This namespace contains all of the necessary engine components.    Classes     Name     class Engine::Graphics::Texture2D    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':53,'href':'/doxydown/hugo-book/files/texture3d_8hpp/','title':"src/Graphics/Texture3D.hpp",'content':" src/Graphics/Texture3D.hpp Namespaces    Name     Engine::Graphics   Engine This namespace contains all of the necessary engine components.    Classes     Name     class Engine::Graphics::Texture3D    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':54,'href':'/doxydown/hugo-book/files/dir_a7363e98f9e0bdd87618633653859815/','title':"src/Utils",'content':" src/Utils Files    Name     src/Utils/Utils.hpp   src/Utils/Path.hpp   src/Utils/Log.hpp   src/Utils/Config.hpp   src/Utils/ArrayView.hpp    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':55,'href':'/doxydown/hugo-book/files/arrayview_8hpp/','title':"src/Utils/ArrayView.hpp",'content':" src/Utils/ArrayView.hpp Namespaces    Name     Engine::Utils   Engine This namespace contains all of the necessary engine components.    Classes     Name     class Engine::Utils::ArrayView Filesystem path utility functions.    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':56,'href':'/doxydown/hugo-book/files/config_8hpp/','title':"src/Utils/Config.hpp",'content':" src/Utils/Config.hpp Defines     Name      ENGINE_ARCH    ENGINE_VERSION Autogenerated version string by CMake.    Macro Documentation define ENGINE_ARCH #define ENGINE_ARCH \u0026#34;amd64\u0026#34;  define ENGINE_VERSION #define ENGINE_VERSION \u0026#34;v1.0.1\u0026#34;  Autogenerated version string by CMake.\nUpdated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':57,'href':'/doxydown/hugo-book/files/log_8hpp/','title':"src/Utils/Log.hpp",'content':" src/Utils/Log.hpp Defines     Name      LOG_DEBUG(MSG, \u0026hellip;)    Macro Documentation define LOG_DEBUG #define LOG_DEBUG(  MSG, ... ) printf(MSG, ##__VA_ARGS__)  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':58,'href':'/doxydown/hugo-book/files/path_8hpp/','title':"src/Utils/Path.hpp",'content':" src/Utils/Path.hpp Namespaces    Name     Engine::Utils::Path Filesystem path utility functions.   Engine::Utils   Engine This namespace contains all of the necessary engine components.    Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':59,'href':'/doxydown/hugo-book/files/utils_8hpp/','title':"src/Utils/Utils.hpp",'content':" src/Utils/Utils.hpp Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':60,'href':'/doxydown/hugo-book/tags/','title':"Tags",'content':""});index.add({'id':61,'href':'/doxydown/hugo-book/pages/test/','title':"Test List",'content':" Test List Class Engine::Audio::AudioBuffer\n Some random test description  Updated on 10 November 2019 at 22:25:43 UTC\n"});index.add({'id':62,'href':'/doxydown/hugo-book/pages/todo/','title':"Todo List",'content':" Todo List Class Engine::Audio::AudioBuffer\n Some random todo  Updated on 10 November 2019 at 22:25:43 UTC\n"});})();